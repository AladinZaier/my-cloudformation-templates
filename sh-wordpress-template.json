{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Template fait par Alaeddine Zaier : Création de site wordpress - seniorhome",
    "Parameters": {
        "VPCID": {
            "Type": "AWS::EC2::VPC::Id",
            "Description": "Veuillez sélectioner un VPC pour votre site web wordpress"
        },
        "ELBSubnet": {
            "Type": "List<AWS::EC2::ELBSubnet::Id>",
            "Description": "Veuillez selectionner les subnets pour votre ELB"
        },
        "PrivateSubnets": {
            "Type": "List<AWS::EC2::subnets::Id>",
            "Description": "Veuillez ajouter des subnets privés pour vos instance EC2 ainsi que votre DB"
        },
        "InstanceType": {
            "Type": "String",
            "Description": "Veuillez choisir un type de instances pour votre machines EC2",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.micro"
            ],
            "ConstraintDescription": "Un correct type de instance EC2 est obligatoire"
        },
        "SSHLocation": {
            "Type": "String",
            "Description": "Veuillez rentrer la plage des adresses IP qui peuvent se connecter",
            "MinLength": "9",
            "MaxLength": "18",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "L'adresse IP doit etre au format x.x.x.x/x"
        },
        "DBClass": {
            "Description": "Veuillez choisir le type d'instance de votre DB",
            "Type": "String",
            "Default": "db.t2.micro",
            "AllowedValues": [
                "db.t2.micro"
            ],
            "ConstraintDescription": "Le type d'instance doit etre un type valide"
        },
        "DBName": {
            "Description": "Veuillez saisir le nom de la base de donées",
            "Type": "String",
            "Default": "wordpressdb",
            "MinLength": "1",
            "MaxLength": "64",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "Le DBName doit commencer par une lettre et etre du type alphanumérique"
        },
        "DBUser": {
            "NoEcho": "true",
            "Description": "Veuillez saisir le nom de l'utilisateur de la DB",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "16",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "Le DBUser doit commencer par une lettre et etre du type alphanumérique"
        },
        "DBPassword": {
            "NoEcho": "true",
            "Description": "Veuillez saisir un mot de passe pour la base de donées",
            "Type": "String",
            "MinLength": "8",
            "MaxLength": "41",
            "AllowedPattern": "[a-zA-Z0-9]*",
            "ConstraintDescription": "Le mot de masse doit contenir seulement des caractères alphanupmérics"
        },
        "MultiAZDatabase": {
            "Default": "false",
            "Description": "Voulez vous choisir l'option MultiAZ pour votre base de données",
            "Type": "String",
            "AllowedValues": [
                "true",
                "false"
            ],
            "ConstraintDescription": "doit etre : true or false."
        },
        "WebServerCapacity": {
            "Default": "1",
            "Description": "Le nombre initial de web servers",
            "Type": "Number",
            "MinValue": "1",
            "MaxValue": "5",
            "ConstraintDescription": "Doit etre entre 1 et 5 innstances"
        },
        "DBAllocatedStorage": {
            "Default": "5",
            "Description": "The size of the database (Gb)",
            "Type": "Number",
            "MinValue": "5",
            "MaxValue": "1024",
            "ConstraintDescription": "must be between 5 and 1024Gb."
        }
    },
    "Mappings": {
        "AWSInstanceType2Arch": {
            "t2.micro": {
                "Arch": "HVM64"
            }
        },
        "AWSRegionArch2AMI": {
            "us-east-1": {
                "HVM64": "ami-f5f41398"
            },
            "us-west-2": {
                "HVM64": "ami-d0f506b0"
            },
            "us-west-1": {
                "HVM64": "ami-6e84fa0e"
            },
            "eu-west-1": {
                "HVM64": "ami-b0ac25c3"
            },
            "eu-central-1": {
                "HVM64": "ami-bf2ba8d0"
            }
        }
    },
    "Resources": {
        "ElasticLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "Subnets": {
                    "Ref": "ELBSubnet"
                },
                "CrossZone": "True",
                "SecurityGroups": {
                    "Ref": "ELBSecurityGroup"
                },
                "LBCookieStickinessPolicy": [
                    {
                        "PolicyName": "CookieBasedPolicy",
                        "CookieExpirationPeriod": "30"
                    }
                ],
                "Listeners": [
                    {
                        "LoadBalancerPort": "80",
                        "InstancePort": "80",
                        "InstanceProtocol": "HTTP",
                        "PolicyNames": [
                            "CookieBasedPolicy"
                        ]
                    }
                ],
                "HealthCheck": {
                    "HealthyThreshold": "2",
                    "Interval": "10",
                    "Target": "HTTP:80/wordpress/wp-admin/install.php",
                    "Timeout": "5",
                    "UnhealthyThreshold": "5"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "-ELB"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "ELBSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "FromPort": "80",
                        "ToPort": "80",
                        "IpProtocol": "TCP",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "-ELBSecurityGroup"
                                ]
                            ]
                        }
                    }
                ]
            }
        }
    }
}
